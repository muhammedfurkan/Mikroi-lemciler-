Version 3.2 HI-TECH Software Intermediate Code
[p mainexit ]
"672 C:\Program Files (x86)\Microchip\xc8\v1.41\include\pic16f84a.h
[v _TRISA0 `Vb ~T0 @X0 0 e@1064 ]
"674
[v _TRISA1 `Vb ~T0 @X0 0 e@1065 ]
"482
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"624
[v _RA0 `Vb ~T0 @X0 0 e@40 ]
"626
[v _RA1 `Vb ~T0 @X0 0 e@41 ]
"201
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;pic16f84a.h: 49: extern volatile unsigned char INDF @ 0x000;
"51 C:\Program Files (x86)\Microchip\xc8\v1.41\include\pic16f84a.h
[; ;pic16f84a.h: 51: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f84a.h: 55: extern volatile unsigned char TMR0 @ 0x001;
"57
[; ;pic16f84a.h: 57: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f84a.h: 61: extern volatile unsigned char PCL @ 0x002;
"63
[; ;pic16f84a.h: 63: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f84a.h: 67: extern volatile unsigned char STATUS @ 0x003;
"69
[; ;pic16f84a.h: 69: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f84a.h: 72: typedef union {
[; ;pic16f84a.h: 73: struct {
[; ;pic16f84a.h: 74: unsigned C :1;
[; ;pic16f84a.h: 75: unsigned DC :1;
[; ;pic16f84a.h: 76: unsigned Z :1;
[; ;pic16f84a.h: 77: unsigned nPD :1;
[; ;pic16f84a.h: 78: unsigned nTO :1;
[; ;pic16f84a.h: 79: unsigned RP :2;
[; ;pic16f84a.h: 80: unsigned IRP :1;
[; ;pic16f84a.h: 81: };
[; ;pic16f84a.h: 82: struct {
[; ;pic16f84a.h: 83: unsigned :5;
[; ;pic16f84a.h: 84: unsigned RP0 :1;
[; ;pic16f84a.h: 85: unsigned RP1 :1;
[; ;pic16f84a.h: 86: };
[; ;pic16f84a.h: 87: struct {
[; ;pic16f84a.h: 88: unsigned CARRY :1;
[; ;pic16f84a.h: 89: unsigned :1;
[; ;pic16f84a.h: 90: unsigned ZERO :1;
[; ;pic16f84a.h: 91: };
[; ;pic16f84a.h: 92: } STATUSbits_t;
[; ;pic16f84a.h: 93: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f84a.h: 152: extern volatile unsigned char FSR @ 0x004;
"154
[; ;pic16f84a.h: 154: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f84a.h: 158: extern volatile unsigned char PORTA @ 0x005;
"160
[; ;pic16f84a.h: 160: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f84a.h: 163: typedef union {
[; ;pic16f84a.h: 164: struct {
[; ;pic16f84a.h: 165: unsigned RA0 :1;
[; ;pic16f84a.h: 166: unsigned RA1 :1;
[; ;pic16f84a.h: 167: unsigned RA2 :1;
[; ;pic16f84a.h: 168: unsigned RA3 :1;
[; ;pic16f84a.h: 169: unsigned RA4 :1;
[; ;pic16f84a.h: 170: };
[; ;pic16f84a.h: 171: } PORTAbits_t;
[; ;pic16f84a.h: 172: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f84a.h: 201: extern volatile unsigned char PORTB @ 0x006;
"203
[; ;pic16f84a.h: 203: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f84a.h: 206: typedef union {
[; ;pic16f84a.h: 207: struct {
[; ;pic16f84a.h: 208: unsigned RB0 :1;
[; ;pic16f84a.h: 209: unsigned RB1 :1;
[; ;pic16f84a.h: 210: unsigned RB2 :1;
[; ;pic16f84a.h: 211: unsigned RB3 :1;
[; ;pic16f84a.h: 212: unsigned RB4 :1;
[; ;pic16f84a.h: 213: unsigned RB5 :1;
[; ;pic16f84a.h: 214: unsigned RB6 :1;
[; ;pic16f84a.h: 215: unsigned RB7 :1;
[; ;pic16f84a.h: 216: };
[; ;pic16f84a.h: 217: } PORTBbits_t;
[; ;pic16f84a.h: 218: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f84a.h: 262: extern volatile unsigned char EEDATA @ 0x008;
"264
[; ;pic16f84a.h: 264: asm("EEDATA equ 08h");
[; <" EEDATA equ 08h ;# ">
[; ;pic16f84a.h: 268: extern volatile unsigned char EEADR @ 0x009;
"270
[; ;pic16f84a.h: 270: asm("EEADR equ 09h");
[; <" EEADR equ 09h ;# ">
[; ;pic16f84a.h: 274: extern volatile unsigned char PCLATH @ 0x00A;
"276
[; ;pic16f84a.h: 276: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f84a.h: 279: typedef union {
[; ;pic16f84a.h: 280: struct {
[; ;pic16f84a.h: 281: unsigned PCLATH :5;
[; ;pic16f84a.h: 282: };
[; ;pic16f84a.h: 283: } PCLATHbits_t;
[; ;pic16f84a.h: 284: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic16f84a.h: 293: extern volatile unsigned char INTCON @ 0x00B;
"295
[; ;pic16f84a.h: 295: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f84a.h: 298: typedef union {
[; ;pic16f84a.h: 299: struct {
[; ;pic16f84a.h: 300: unsigned RBIF :1;
[; ;pic16f84a.h: 301: unsigned INTF :1;
[; ;pic16f84a.h: 302: unsigned T0IF :1;
[; ;pic16f84a.h: 303: unsigned RBIE :1;
[; ;pic16f84a.h: 304: unsigned INTE :1;
[; ;pic16f84a.h: 305: unsigned T0IE :1;
[; ;pic16f84a.h: 306: unsigned EEIE :1;
[; ;pic16f84a.h: 307: unsigned GIE :1;
[; ;pic16f84a.h: 308: };
[; ;pic16f84a.h: 309: struct {
[; ;pic16f84a.h: 310: unsigned :2;
[; ;pic16f84a.h: 311: unsigned TMR0IF :1;
[; ;pic16f84a.h: 312: unsigned :2;
[; ;pic16f84a.h: 313: unsigned TMR0IE :1;
[; ;pic16f84a.h: 314: };
[; ;pic16f84a.h: 315: } INTCONbits_t;
[; ;pic16f84a.h: 316: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f84a.h: 370: extern volatile unsigned char OPTION_REG @ 0x081;
"372
[; ;pic16f84a.h: 372: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f84a.h: 375: typedef union {
[; ;pic16f84a.h: 376: struct {
[; ;pic16f84a.h: 377: unsigned PS :3;
[; ;pic16f84a.h: 378: unsigned PSA :1;
[; ;pic16f84a.h: 379: unsigned T0SE :1;
[; ;pic16f84a.h: 380: unsigned T0CS :1;
[; ;pic16f84a.h: 381: unsigned INTEDG :1;
[; ;pic16f84a.h: 382: unsigned nRBPU :1;
[; ;pic16f84a.h: 383: };
[; ;pic16f84a.h: 384: struct {
[; ;pic16f84a.h: 385: unsigned PS0 :1;
[; ;pic16f84a.h: 386: unsigned PS1 :1;
[; ;pic16f84a.h: 387: unsigned PS2 :1;
[; ;pic16f84a.h: 388: };
[; ;pic16f84a.h: 389: } OPTION_REGbits_t;
[; ;pic16f84a.h: 390: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f84a.h: 439: extern volatile unsigned char TRISA @ 0x085;
"441
[; ;pic16f84a.h: 441: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f84a.h: 444: typedef union {
[; ;pic16f84a.h: 445: struct {
[; ;pic16f84a.h: 446: unsigned TRISA0 :1;
[; ;pic16f84a.h: 447: unsigned TRISA1 :1;
[; ;pic16f84a.h: 448: unsigned TRISA2 :1;
[; ;pic16f84a.h: 449: unsigned TRISA3 :1;
[; ;pic16f84a.h: 450: unsigned TRISA4 :1;
[; ;pic16f84a.h: 451: };
[; ;pic16f84a.h: 452: } TRISAbits_t;
[; ;pic16f84a.h: 453: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f84a.h: 482: extern volatile unsigned char TRISB @ 0x086;
"484
[; ;pic16f84a.h: 484: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f84a.h: 487: typedef union {
[; ;pic16f84a.h: 488: struct {
[; ;pic16f84a.h: 489: unsigned TRISB0 :1;
[; ;pic16f84a.h: 490: unsigned TRISB1 :1;
[; ;pic16f84a.h: 491: unsigned TRISB2 :1;
[; ;pic16f84a.h: 492: unsigned TRISB3 :1;
[; ;pic16f84a.h: 493: unsigned TRISB4 :1;
[; ;pic16f84a.h: 494: unsigned TRISB5 :1;
[; ;pic16f84a.h: 495: unsigned TRISB6 :1;
[; ;pic16f84a.h: 496: unsigned TRISB7 :1;
[; ;pic16f84a.h: 497: };
[; ;pic16f84a.h: 498: } TRISBbits_t;
[; ;pic16f84a.h: 499: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f84a.h: 543: extern volatile unsigned char EECON1 @ 0x088;
"545
[; ;pic16f84a.h: 545: asm("EECON1 equ 088h");
[; <" EECON1 equ 088h ;# ">
[; ;pic16f84a.h: 548: typedef union {
[; ;pic16f84a.h: 549: struct {
[; ;pic16f84a.h: 550: unsigned RD :1;
[; ;pic16f84a.h: 551: unsigned WR :1;
[; ;pic16f84a.h: 552: unsigned WREN :1;
[; ;pic16f84a.h: 553: unsigned WRERR :1;
[; ;pic16f84a.h: 554: unsigned EEIF :1;
[; ;pic16f84a.h: 555: };
[; ;pic16f84a.h: 556: } EECON1bits_t;
[; ;pic16f84a.h: 557: extern volatile EECON1bits_t EECON1bits @ 0x088;
[; ;pic16f84a.h: 586: extern volatile unsigned char EECON2 @ 0x089;
"588
[; ;pic16f84a.h: 588: asm("EECON2 equ 089h");
[; <" EECON2 equ 089h ;# ">
[; ;pic16f84a.h: 598: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f84a.h: 600: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f84a.h: 602: extern volatile __bit EEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f84a.h: 604: extern volatile __bit EEIF @ (((unsigned) &EECON1)*8) + 4;
[; ;pic16f84a.h: 606: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f84a.h: 608: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f84a.h: 610: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f84a.h: 612: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f84a.h: 614: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f84a.h: 616: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f84a.h: 618: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f84a.h: 620: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f84a.h: 622: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f84a.h: 624: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f84a.h: 626: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f84a.h: 628: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f84a.h: 630: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f84a.h: 632: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f84a.h: 634: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f84a.h: 636: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f84a.h: 638: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f84a.h: 640: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f84a.h: 642: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f84a.h: 644: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f84a.h: 646: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f84a.h: 648: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f84a.h: 650: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f84a.h: 652: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f84a.h: 654: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f84a.h: 656: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f84a.h: 658: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f84a.h: 660: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f84a.h: 662: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f84a.h: 664: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f84a.h: 666: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f84a.h: 668: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f84a.h: 670: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f84a.h: 672: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f84a.h: 674: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f84a.h: 676: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f84a.h: 678: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f84a.h: 680: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f84a.h: 682: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f84a.h: 684: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f84a.h: 686: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f84a.h: 688: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f84a.h: 690: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f84a.h: 692: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f84a.h: 694: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f84a.h: 696: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f84a.h: 698: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f84a.h: 700: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f84a.h: 702: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f84a.h: 704: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f84a.h: 706: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f84a.h: 708: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f84a.h: 710: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic.h: 28: extern void __nop(void);
[; ;pic.h: 77: extern unsigned int flash_read(unsigned short addr);
[; ;pic.h: 141: extern void flash_erase(unsigned short addr);
[; ;eeprom_routines.h: 114: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 115: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 116: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 117: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 152: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 154: extern __nonreentrant void _delaywdt(unsigned long);
[; ;pic.h: 192: extern unsigned char __resetbits;
[; ;pic.h: 193: extern __bit __powerdown;
[; ;pic.h: 194: extern __bit __timeout;
"16 newmain.c
[v _say `uc ~T0 @X0 1 e ]
[; ;newmain.c: 16: unsigned char say;
"17
[v _bup_simdiki `b ~T0 @X0 1 e ]
[v _bup_onceki `b ~T0 @X0 1 e ]
[; ;newmain.c: 17: bit bup_simdiki,bup_onceki;
"18
[v _bdown_simdiki `b ~T0 @X0 1 e ]
[v _bdown_onceki `b ~T0 @X0 1 e ]
[; ;newmain.c: 18: bit bdown_simdiki,bdown_onceki;
"20
[v _main `(v ~T0 @X0 1 ef ]
{
[; ;newmain.c: 20: void main(void) {
[e :U _main ]
[f ]
[; ;newmain.c: 22: TRISA0=1;
"22
[e = _TRISA0 -> -> 1 `i `b ]
[; ;newmain.c: 23: TRISA1=1;
"23
[e = _TRISA1 -> -> 1 `i `b ]
[; ;newmain.c: 24: TRISB=0;
"24
[e = _TRISB -> -> 0 `i `uc ]
[; ;newmain.c: 25: say=1;
"25
[e = _say -> -> 1 `i `uc ]
[; ;newmain.c: 27: for(;;)
"27
{
"28
[e :U 24 ]
[; ;newmain.c: 28: {
{
[; ;newmain.c: 29: bup_simdiki=RA0;
"29
[e = _bup_simdiki _RA0 ]
[; ;newmain.c: 30: bdown_simdiki=RA1;
"30
[e = _bdown_simdiki _RA1 ]
[; ;newmain.c: 32: if(bup_simdiki != bup_onceki)
"32
[e $ ! != _bup_simdiki _bup_onceki 27  ]
[; ;newmain.c: 33: {
"33
{
[; ;newmain.c: 34: bup_onceki=bup_simdiki;
"34
[e = _bup_onceki _bup_simdiki ]
[; ;newmain.c: 35: if(bup_simdiki==0)
"35
[e $ ! == -> _bup_simdiki `i -> 0 `i 28  ]
[; ;newmain.c: 36: {
"36
{
[; ;newmain.c: 37: if(say>1)
"37
[e $ ! > -> _say `i -> 1 `i 29  ]
[; ;newmain.c: 38: {
"38
{
[; ;newmain.c: 39: say/=2;
"39
[e =/ _say -> 2 `uc ]
"40
}
[e :U 29 ]
"41
}
[e :U 28 ]
"42
}
[e :U 27 ]
[; ;newmain.c: 40: }
[; ;newmain.c: 41: }
[; ;newmain.c: 42: }
[; ;newmain.c: 45: if(bdown_simdiki != bdown_onceki)
"45
[e $ ! != _bdown_simdiki _bdown_onceki 30  ]
[; ;newmain.c: 46: {
"46
{
[; ;newmain.c: 47: bdown_onceki=bdown_simdiki;
"47
[e = _bdown_onceki _bdown_simdiki ]
[; ;newmain.c: 48: if(bdown_simdiki==0)
"48
[e $ ! == -> _bdown_simdiki `i -> 0 `i 31  ]
[; ;newmain.c: 49: {
"49
{
[; ;newmain.c: 50: if(say<128)
"50
[e $ ! < -> _say `i -> 128 `i 32  ]
[; ;newmain.c: 51: {
"51
{
[; ;newmain.c: 52: say*=2;
"52
[e =* _say -> -> 2 `i `uc ]
"53
}
[e :U 32 ]
"54
}
[e :U 31 ]
"56
}
[e :U 30 ]
[; ;newmain.c: 53: }
[; ;newmain.c: 54: }
[; ;newmain.c: 56: }
[; ;newmain.c: 58: PORTB=say;
"58
[e = _PORTB _say ]
"59
}
[; ;newmain.c: 59: }
[e $U 24  ]
[e :U 25 ]
}
[; ;newmain.c: 60: return;
"60
[e $UE 23  ]
[; ;newmain.c: 61: }
"61
[e :UE 23 ]
}
