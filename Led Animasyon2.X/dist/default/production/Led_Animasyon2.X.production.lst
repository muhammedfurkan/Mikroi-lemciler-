

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Feb 27 10:11:24 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F84A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
     9                           	dabs	1,0x4E,2
    10  0000                     
    11                           ; Version 1.41
    12                           ; Generated 25/01/2017 GMT
    13                           ; 
    14                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F84A Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0008                     	;# 
    53  0009                     	;# 
    54  000A                     	;# 
    55  000B                     	;# 
    56  0081                     	;# 
    57  0085                     	;# 
    58  0086                     	;# 
    59  0088                     	;# 
    60  0089                     	;# 
    61                           
    62                           	psect	nvBANK0
    63  0018                     __pnvBANK0:	
    64  0018                     _sayi:	
    65  0018                     	ds	1
    66  0006                     _PORTB	set	6
    67  0086                     _TRISB	set	134
    68                           
    69                           	psect	cinit
    70  03FE                     start_initialization:	
    71                           ; #config settings
    72                           
    73  03FE                     __initialization:	
    74  03FE                     end_of_initialization:	
    75                           ;End of C runtime variable initialization code
    76                           
    77  03FE                     __end_of__initialization:	
    78  03FE  0183               	clrf	3
    79  03FF  2B66               	ljmp	_main	;jump to C main() function
    80                           
    81                           	psect	cstackBANK0
    82  000C                     __pcstackBANK0:	
    83  000C                     ?_main:	
    84  000C                     ?___awdiv:	
    85                           ; 1 bytes @ 0x0
    86                           
    87  000C                     ___awdiv@divisor:	
    88                           ; 2 bytes @ 0x0
    89                           
    90                           
    91                           ; 2 bytes @ 0x0
    92  000C                     	ds	2
    93  000E                     ___awdiv@dividend:	
    94                           
    95                           ; 2 bytes @ 0x2
    96  000E                     	ds	2
    97  0010                     ??___awdiv:	
    98                           
    99                           ; 1 bytes @ 0x4
   100  0010                     	ds	1
   101  0011                     ___awdiv@counter:	
   102                           
   103                           ; 1 bytes @ 0x5
   104  0011                     	ds	1
   105  0012                     ___awdiv@sign:	
   106                           
   107                           ; 1 bytes @ 0x6
   108  0012                     	ds	1
   109  0013                     ___awdiv@quotient:	
   110                           
   111                           ; 2 bytes @ 0x7
   112  0013                     	ds	2
   113  0015                     ??_main:	
   114                           
   115                           ; 1 bytes @ 0x9
   116  0015                     	ds	3
   117                           
   118                           	psect	maintext
   119  0366                     __pmaintext:	
   120 ;;
   121 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   122 ;;
   123 ;; *************** function _main *****************
   124 ;; Defined at:
   125 ;;		line 13 in file "newmain.c"
   126 ;; Parameters:    Size  Location     Type
   127 ;;		None
   128 ;; Auto vars:     Size  Location     Type
   129 ;;		None
   130 ;; Return value:  Size  Location     Type
   131 ;;                  1    wreg      void 
   132 ;; Registers used:
   133 ;;		wreg, status,2, status,0, pclath, cstack
   134 ;; Tracked objects:
   135 ;;		On entry : B00/0
   136 ;;		On exit  : 0/0
   137 ;;		Unchanged: 0/0
   138 ;; Data sizes:     COMMON   BANK0
   139 ;;      Params:         0       0
   140 ;;      Locals:         0       0
   141 ;;      Temps:          0       3
   142 ;;      Totals:         0       3
   143 ;;Total ram usage:        3 bytes
   144 ;; Hardware stack levels required when called:    1
   145 ;; This function calls:
   146 ;;		___awdiv
   147 ;; This function is called by:
   148 ;;		Startup code after reset
   149 ;; This function uses a non-reentrant model
   150 ;;
   151                           
   152                           
   153                           ;psect for function _main
   154  0366                     _main:	
   155                           
   156                           ;newmain.c: 15: TRISB=0;
   157                           
   158                           ;incstack = 0
   159                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   160  0366  1683               	bsf	3,5	;RP0=1, select bank1
   161  0367  0186               	clrf	6	;volatile
   162                           
   163                           ;newmain.c: 16: sayi=1;
   164  0368  1283               	bcf	3,5	;RP0=0, select bank0
   165  0369  0198               	clrf	_sayi
   166  036A  0A98               	incf	_sayi,f
   167  036B                     l598:	
   168                           ;newmain.c: 18: {
   169                           ;newmain.c: 19: while(sayi<128)
   170                           
   171                           ;newmain.c: 17: while(1)
   172                           
   173  036B  3080               	movlw	128
   174  036C  1283               	bcf	3,5	;RP0=0, select bank0
   175  036D  0218               	subwf	_sayi,w
   176  036E  1803               	btfsc	3,0
   177  036F  2B9E               	goto	l606
   178                           
   179                           ;newmain.c: 20: {
   180                           ;newmain.c: 21: PORTB=sayi;
   181  0370  0818               	movf	_sayi,w
   182  0371  0086               	movwf	6	;volatile
   183                           
   184                           ;newmain.c: 22: sayi=sayi*2;
   185  0372  0818               	movf	_sayi,w
   186  0373  0095               	movwf	??_main
   187  0374  0715               	addwf	??_main,w
   188  0375  0096               	movwf	??_main+1
   189  0376  0816               	movf	??_main+1,w
   190  0377  0098               	movwf	_sayi
   191                           
   192                           ;newmain.c: 24: _delay((unsigned long)((100)*(4000000/4000.0)));
   193  0378  3082               	movlw	130
   194  0379  0096               	movwf	??_main+1
   195  037A  30DD               	movlw	221
   196  037B  0095               	movwf	??_main
   197  037C                     u257:	
   198  037C  0B95               	decfsz	??_main,f
   199  037D  2B7C               	goto	u257
   200  037E  0B96               	decfsz	??_main+1,f
   201  037F  2B7C               	goto	u257
   202  0380  2B81               	nop2
   203  0381  2B6B               	goto	l598
   204  0382                     l600:	
   205                           ;newmain.c: 25: }
   206                           ;newmain.c: 27: while(sayi>1)
   207                           
   208                           
   209                           ;newmain.c: 28: {
   210                           ;newmain.c: 29: PORTB=sayi;
   211  0382  0818               	movf	_sayi,w
   212  0383  0086               	movwf	6	;volatile
   213                           
   214                           ;newmain.c: 30: sayi=sayi/2;
   215  0384  3002               	movlw	2
   216  0385  008C               	movwf	___awdiv@divisor
   217  0386  3000               	movlw	0
   218  0387  008D               	movwf	___awdiv@divisor+1
   219  0388  0818               	movf	_sayi,w
   220  0389  0095               	movwf	??_main
   221  038A  0196               	clrf	??_main+1
   222  038B  0815               	movf	??_main,w
   223  038C  008E               	movwf	___awdiv@dividend
   224  038D  0816               	movf	??_main+1,w
   225  038E  008F               	movwf	___awdiv@dividend+1
   226  038F  23A4               	fcall	___awdiv
   227  0390  1283               	bcf	3,5	;RP0=0, select bank0
   228  0391  080C               	movf	?___awdiv,w
   229  0392  0097               	movwf	??_main+2
   230  0393  0817               	movf	??_main+2,w
   231  0394  0098               	movwf	_sayi
   232                           
   233                           ;newmain.c: 32: _delay((unsigned long)((100)*(4000000/4000.0)));
   234  0395  3082               	movlw	130
   235  0396  0096               	movwf	??_main+1
   236  0397  30DD               	movlw	221
   237  0398  0095               	movwf	??_main
   238  0399                     u267:	
   239  0399  0B95               	decfsz	??_main,f
   240  039A  2B99               	goto	u267
   241  039B  0B96               	decfsz	??_main+1,f
   242  039C  2B99               	goto	u267
   243  039D  2B9E               	nop2
   244  039E                     l606:	
   245  039E  3002               	movlw	2
   246  039F  1283               	bcf	3,5	;RP0=0, select bank0
   247  03A0  0218               	subwf	_sayi,w
   248  03A1  1C03               	btfss	3,0
   249  03A2  2B6B               	goto	l598
   250  03A3  2B82               	goto	l600
   251  03A4                     __end_of_main:	
   252                           ;newmain.c: 33: }
   253                           ;newmain.c: 36: }
   254                           ;newmain.c: 37: return;
   255                           
   256                           
   257                           	psect	text1
   258  03A4                     __ptext1:	
   259 ;; *************** function ___awdiv *****************
   260 ;; Defined at:
   261 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
   262 ;; Parameters:    Size  Location     Type
   263 ;;  divisor         2    0[BANK0 ] int 
   264 ;;  dividend        2    2[BANK0 ] int 
   265 ;; Auto vars:     Size  Location     Type
   266 ;;  quotient        2    7[BANK0 ] int 
   267 ;;  sign            1    6[BANK0 ] unsigned char 
   268 ;;  counter         1    5[BANK0 ] unsigned char 
   269 ;; Return value:  Size  Location     Type
   270 ;;                  2    0[BANK0 ] int 
   271 ;; Registers used:
   272 ;;		wreg, status,2, status,0
   273 ;; Tracked objects:
   274 ;;		On entry : 0/0
   275 ;;		On exit  : 0/0
   276 ;;		Unchanged: 0/0
   277 ;; Data sizes:     COMMON   BANK0
   278 ;;      Params:         0       4
   279 ;;      Locals:         0       4
   280 ;;      Temps:          0       1
   281 ;;      Totals:         0       9
   282 ;;Total ram usage:        9 bytes
   283 ;; Hardware stack levels used:    1
   284 ;; This function calls:
   285 ;;		Nothing
   286 ;; This function is called by:
   287 ;;		_main
   288 ;; This function uses a non-reentrant model
   289 ;;
   290                           
   291                           
   292                           ;psect for function ___awdiv
   293  03A4                     ___awdiv:	
   294                           
   295                           ;incstack = 0
   296                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   297  03A4  1283               	bcf	3,5	;RP0=0, select bank0
   298  03A5  0192               	clrf	___awdiv@sign
   299  03A6  1F8D               	btfss	___awdiv@divisor+1,7
   300  03A7  2BAF               	goto	l552
   301  03A8  098C               	comf	___awdiv@divisor,f
   302  03A9  098D               	comf	___awdiv@divisor+1,f
   303  03AA  0A8C               	incf	___awdiv@divisor,f
   304  03AB  1903               	skipnz
   305  03AC  0A8D               	incf	___awdiv@divisor+1,f
   306  03AD  0192               	clrf	___awdiv@sign
   307  03AE  0A92               	incf	___awdiv@sign,f
   308  03AF                     l552:	
   309  03AF  1F8F               	btfss	___awdiv@dividend+1,7
   310  03B0  2BBA               	goto	l558
   311  03B1  098E               	comf	___awdiv@dividend,f
   312  03B2  098F               	comf	___awdiv@dividend+1,f
   313  03B3  0A8E               	incf	___awdiv@dividend,f
   314  03B4  1903               	skipnz
   315  03B5  0A8F               	incf	___awdiv@dividend+1,f
   316  03B6  3001               	movlw	1
   317  03B7  0090               	movwf	??___awdiv
   318  03B8  0810               	movf	??___awdiv,w
   319  03B9  0692               	xorwf	___awdiv@sign,f
   320  03BA                     l558:	
   321  03BA  0193               	clrf	___awdiv@quotient
   322  03BB  0194               	clrf	___awdiv@quotient+1
   323  03BC  080C               	movf	___awdiv@divisor,w
   324  03BD  040D               	iorwf	___awdiv@divisor+1,w
   325  03BE  1903               	btfsc	3,2
   326  03BF  2BF1               	goto	l580
   327  03C0  0191               	clrf	___awdiv@counter
   328  03C1  0A91               	incf	___awdiv@counter,f
   329  03C2                     l568:	
   330  03C2  1B8D               	btfsc	___awdiv@divisor+1,7
   331  03C3  2BD0               	goto	l570
   332  03C4  3001               	movlw	1
   333  03C5                     u165:	
   334  03C5  1003               	clrc
   335  03C6  0D8C               	rlf	___awdiv@divisor,f
   336  03C7  0D8D               	rlf	___awdiv@divisor+1,f
   337  03C8  3EFF               	addlw	-1
   338  03C9  1D03               	skipz
   339  03CA  2BC5               	goto	u165
   340  03CB  3001               	movlw	1
   341  03CC  0090               	movwf	??___awdiv
   342  03CD  0810               	movf	??___awdiv,w
   343  03CE  0791               	addwf	___awdiv@counter,f
   344  03CF  2BC2               	goto	l568
   345  03D0                     l570:	
   346  03D0  3001               	movlw	1
   347  03D1                     u185:	
   348  03D1  1003               	clrc
   349  03D2  0D93               	rlf	___awdiv@quotient,f
   350  03D3  0D94               	rlf	___awdiv@quotient+1,f
   351  03D4  3EFF               	addlw	-1
   352  03D5  1D03               	skipz
   353  03D6  2BD1               	goto	u185
   354  03D7  080D               	movf	___awdiv@divisor+1,w
   355  03D8  020F               	subwf	___awdiv@dividend+1,w
   356  03D9  1D03               	skipz
   357  03DA  2BDD               	goto	u195
   358  03DB  080C               	movf	___awdiv@divisor,w
   359  03DC  020E               	subwf	___awdiv@dividend,w
   360  03DD                     u195:	
   361  03DD  1C03               	skipc
   362  03DE  2BE6               	goto	l576
   363  03DF  080C               	movf	___awdiv@divisor,w
   364  03E0  028E               	subwf	___awdiv@dividend,f
   365  03E1  080D               	movf	___awdiv@divisor+1,w
   366  03E2  1C03               	skipc
   367  03E3  038F               	decf	___awdiv@dividend+1,f
   368  03E4  028F               	subwf	___awdiv@dividend+1,f
   369  03E5  1413               	bsf	___awdiv@quotient,0
   370  03E6                     l576:	
   371  03E6  3001               	movlw	1
   372  03E7                     u205:	
   373  03E7  1003               	clrc
   374  03E8  0C8D               	rrf	___awdiv@divisor+1,f
   375  03E9  0C8C               	rrf	___awdiv@divisor,f
   376  03EA  3EFF               	addlw	-1
   377  03EB  1D03               	skipz
   378  03EC  2BE7               	goto	u205
   379  03ED  3001               	movlw	1
   380  03EE  0291               	subwf	___awdiv@counter,f
   381  03EF  1D03               	btfss	3,2
   382  03F0  2BD0               	goto	l570
   383  03F1                     l580:	
   384  03F1  0812               	movf	___awdiv@sign,w
   385  03F2  1903               	btfsc	3,2
   386  03F3  2BF9               	goto	l584
   387  03F4  0993               	comf	___awdiv@quotient,f
   388  03F5  0994               	comf	___awdiv@quotient+1,f
   389  03F6  0A93               	incf	___awdiv@quotient,f
   390  03F7  1903               	skipnz
   391  03F8  0A94               	incf	___awdiv@quotient+1,f
   392  03F9                     l584:	
   393  03F9  0814               	movf	___awdiv@quotient+1,w
   394  03FA  008D               	movwf	?___awdiv+1
   395  03FB  0813               	movf	___awdiv@quotient,w
   396  03FC  008C               	movwf	?___awdiv
   397  03FD  0008               	return
   398  03FE                     __end_of___awdiv:	
   399  004E                     btemp	set	78	;btemp
   400  004E                     wtemp0	set	78


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66     12      13

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     406
                                              9 BANK0      3     3      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     406
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              40      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               42      C       D       3       19.7%
ABS                  0      0       D       4        0.0%
BITBANK0            42      0       0       5        0.0%
DATA                 0      0       D       6        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Feb 27 10:11:24 2017

           ___awdiv@sign 0012                      l600 0382                      l606 039E  
                    l552 03AF                      l570 03D0                      l580 03F1  
                    l558 03BA                      l584 03F9                      l576 03E6  
                    l568 03C2                      l598 036B                      u205 03E7  
                    u165 03C5                      u185 03D1                      u257 037C  
                    u195 03DD                      u267 0399                     _main 0366  
                   _sayi 0018                     btemp 004E                     start 0000  
                  ?_main 000C          __end_of___awdiv 03FE          ___awdiv@divisor 000C  
        ___awdiv@counter 0011                    _PORTB 0006                    _TRISB 0086  
                  status 0003                    wtemp0 004E          __initialization 03FE  
           __end_of_main 03A4                   ??_main 0015         ___awdiv@dividend 000E  
              ??___awdiv 0010         ___awdiv@quotient 0013  __end_of__initialization 03FE  
             __pmaintext 0366                  ___awdiv 03A4                  __ptext1 03A4  
   end_of_initialization 03FE      start_initialization 03FE                ___latbits 0000  
          __pcstackBANK0 000C                __pnvBANK0 0018                 ?___awdiv 000C  
       __size_of___awdiv 005A            __size_of_main 003E  
